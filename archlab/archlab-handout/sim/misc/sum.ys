# Execution begins at address 0
    .pos 0
    irmovq stack, %rsp      # Set up stack pointer
    call main               # Execute main program
    halt                    # Terminate program

# Sample linked list 
.align 8 
ele1: 
    .quad 0x00a 
    .quad ele2

ele2: 
    .quad 0x0b0 
    .quad ele3 
    
ele3: 
    .quad 0xc00 
    .quad 0


main:
    irmovq ele1, %rdi       # Move head node to %rdi as sum function input
    call sum                # Call sum function
    ret

sum:
    irmovq $0, %rsi         # Set val = %rsi = 0
    call test               # Begin loop

loop:
    mrmovq (%rdi), %r10      # Get node value
    addq %r10, %rsi          # Add node value
    mrmovq 8(%rdi), %rdi     # node to node.next

test:
    andq %rdi, %rdi         # Check %rdi if equal to 0
    jne loop
    rrmovq %rsi, %rax
    ret


# Stack starts here and grows to lower addresses
        .pos 0x200
stack:




